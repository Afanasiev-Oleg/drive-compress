name: Deploy Apps Script

on:
  push:
    branches: [ main ]
    paths:
      - 'appsscript/**'
      - '.github/workflows/apps_script_deploy.yml'
  workflow_dispatch: {}

concurrency:
  group: apps-script-deploy
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ROOT_DIR: appsscript               # папка с *.gs и appsscript.json
      SCRIPT_ID: ${{ secrets.SCRIPT_ID }} # Script ID проекта Apps Script
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify ROOT_DIR exists
        run: |
          if [ ! -d "$ROOT_DIR" ]; then
            echo "::error::Directory '$ROOT_DIR' not found. Create it and place your *.gs and appsscript.json inside."
            exit 1
          fi
          ls -la "$ROOT_DIR"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install clasp
        run: npm i -g @google/clasp

      - name: Write Service Account key
        run: |
          echo '${{ secrets.GCP_SA_JSON }}' > $HOME/sa.json
          # файл автоматически маскируется GitHub, но на всякий случай запретим чтение другими
          chmod 600 $HOME/sa.json

      - name: Auth with Service Account
        run: clasp login --creds $HOME/sa.json --no-localhost

      - name: Create .clasp.json
        run: |
          printf '{\n  "scriptId": "%s",\n  "rootDir": "%s"\n}\n' "$SCRIPT_ID" "$ROOT_DIR" > .clasp.json
          cat .clasp.json

      - name: Push to Apps Script
        run: clasp push -f

      - name: Cleanup key
        if: always()
        run: rm -f $HOME/sa.json
